---
// Tags for the Blog and post pages

// Components
import Badge from '../Badge.astro'

// Data
import { getCollection } from 'astro:content'
const posts = await getCollection('blog')
const tags = [...new Set(posts.flatMap(post => post.data.tags))]
const currentUrl = Astro.url

// Improved tag detection that works with any URL format
const getCurrentTag = () => {
  // Handle blog index page
  if (currentUrl.pathname === '/blog' || currentUrl.pathname === '/blog/') {
    return 'blog'
  }
  
  // Handle tag pages
  const tagSegment = currentUrl.pathname.split('/').pop()
  
  // Remove possible file extension (.html) and trailing slash
  return tagSegment?.replace(/(\.html|\/)$/, '') || ''
}

const currentTag = getCurrentTag()
---

<div class="tags">
  <Badge 
    link="/blog" 
    name="All" 
    type={currentTag === 'blog' ? 'primary' : 'neutral'} 
  />
  {
    tags.map(tag => (
      <Badge
        link={`/blog/tags/${tag}`}
        name={tag}
        type={currentTag === tag ? 'primary' : 'neutral'}
      />
    ))
  }
</div>

<style>
  .tags {
    @apply mb-6 flex flex-row flex-wrap items-center justify-start gap-2 capitalize;
  }
</style>